<?php

/**
 * Implements hook_entity_info().
 */
function tracdelight_entity_info() {
  $info['tracdelight_product'] = array(
    'label' => t('tracdelight product'),
    'controller class' => 'TracdelightProductController',
    'base table' => 'tracdelight_product',
    'uri callback' => 'tracdelight_product_uri',
    'label callback' => 'entity_class_label',
    'fieldable' => TRUE,
    'bundles' => array(
      'tracdelight_product' => array(
        'label' => 'tracdelight_product',
        'admin' => array(
          'path' => 'admin/structure/tracdelight_product/manage',
          'access arguments' => array('administer tracdelight_product entities'),

        ),
      )
    ),
    'entity keys' => array(
      'id' => 'ein',
    ),
    'entity class' => 'TracdelightProduct',
    'admin ui' => array(
      'path' => 'admin/content/tracdelight_product',
    ),
    'access callback' => 'tracdelight_product_access',
    'module' => 'tracdelight',
    'view modes' => array(
      'teaser' => array(
        'label' => t('Teaser'),
        'custom settings' => TRUE,
      ),
    ),
  );

  return $info;
}



/**
 * Implements hook_menu().
 */
function tracdelight_menu() {

  $items = entity_ui_controller('tracdelight_product')->hook_menu();
  foreach ($items as &$item) {
    $item['file'] = (isset($item['file'])) ? 'includes/tracdelight_product.inc' : NULL;
  }

  $items['admin/structure/tracdelight_product/manage'] = array(
    'title' => 'Administer tracdelight_product entity type',
    'page callback' => 'tracdelight_product_admin_page',
    'access arguments' => array('administer tracdelight_product entities'),
  );

  $items['tracdelight_product/%tracdelight_product'] = array(
    'title callback' => 'postit_page_title',
    'title arguments' => array(1),
    'page callback' => 'tracdelight_product_page_view',
    'page arguments' => array(1),
    'access arguments' => array('view tracdelight_product entities'),
    'file' => 'includes/tracdelight_product.inc',
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function tracdelight_permission() {
  return array(
    'create tracdelight_product entities' => array(
      'title' => t('Create products'),
      'description' => t('Allows users to create products.'),
      'restrict access' => TRUE,
    ),
    'view tracdelight_product entities' => array(
      'title' => t('View products'),
      'description' => t('Allows users to view products.'),
      'restrict access' => TRUE,
    ),
    'edit any tracdelight_product entities' => array(
      'title' => t('Edit any products'),
      'description' => t('Allows users to edit any products.'),
      'restrict access' => TRUE,
    ),
    'edit own tracdelight_product entities' => array(
      'title' => t('Edit own products'),
      'description' => t('Allows users to edit own products.'),
      'restrict access' => TRUE,
    ),
    'delete any tracdelight_product entities' => array(
      'title' => t('Delete any products'),
      'description' => t('Allows users to delete any products.'),
      'restrict access' => TRUE,
    ),
    'delete own tracdelight_product entities' => array(
      'title' => t('Delete own products'),
      'description' => t('Allows users to delete own products.'),
      'restrict access' => TRUE,
    ),
  );
}


/**
 * Implements hook_field_extra_fields()
 */
function tracdelight_field_extra_fields() {

  $extra_fields = array();
  $extra_fields['tracdelight_product']['tracdelight_product'] = array(
    'display' => array(
      'ein' => array(
        'label' => t('EIN'),
        'weight' => 0,
      ),
    ),
  );

  return $extra_fields;
}


/**
 * Access callback for Product.
 */
function tracdelight_product_access($op, $tracdelight_product, $account = NULL, $entity_type = NULL) {

  global $user;
  if (!isset($account)) {
    $account = $user;
  }
  switch ($op) {
    case 'create':
      return user_access('create tracdelight_product entities', $account);
    case 'view':
      return user_access('view tracdelight_product entities', $account);
    case 'edit':
    case 'update':
      return user_access('edit any tracdelight_product entities')
        || (user_access('edit own tracdelight_product entities') && ($tracdelight_product->uid == $account->uid));
    case 'delete':
      return user_access('delete any tracdelight_product entities')
        || (user_access('delete own tracdelight_product entities') && ($tracdelight_product->uid == $account->uid));
  }
}

function tracdelight_product_add_form_submit($form, &$form_state) {

  $form_state['values']['is_new'] = isset($form_state['tracdelight_product']->is_new) ? $form_state['tracdelight_product']->is_new : FALSE;

  $tracdelight_product_submission = (object) $form_state['values'];
  field_attach_submit('tracdelight_product', $tracdelight_product_submission, $form, $form_state);
  $tracdelight_product = tracdelight_product_save($tracdelight_product_submission);

  $form_state['redirect'] = "tracdelight_product/$tracdelight_product->ein";
}

function tracdelight_product_form($form, &$form_state, $tracdelight_product) {

  $form_state['tracdelight_product'] = $tracdelight_product;

  $form['ein'] = array(
    '#type' => 'textfield',
    '#required' => TRUE,
    '#title' => t('EIN'),
    '#default_value' => isset($tracdelight_product->ein) ? $tracdelight_product->ein : NULL,
    '#disabled' => !(isset($tracdelight_product->is_new) && $tracdelight_product->is_new),
  );

  $form['sku'] = array(
    '#type' => 'textfield',
    '#required' => TRUE,
    '#title' => t('SKU'),
    '#default_value' => isset($tracdelight_product->sku) ? $tracdelight_product->sku : NULL,
  );

  $form['detail_page_url'] = array(
    '#type' => 'textfield',
    '#title' => t('Page URL'),
    '#default_value' => isset($tracdelight_product->detail_page_url) ? $tracdelight_product->detail_page_url : NULL,
    '#required' => TRUE,
  );

  $form['title'] = array(
    '#type' => 'textfield',
    '#title' => t('Title'),
    '#default_value' => isset($tracdelight_product->title) ? $tracdelight_product->title : NULL,
    '#required' => TRUE,
  );

  $form['manufacturer'] = array(
    '#type' => 'textfield',
    '#title' => t('Manufacturer'),
    '#default_value' => isset($tracdelight_product->manufacturer) ? $tracdelight_product->manufacturer : NULL,
  );

  $form['brand'] = array(
    '#type' => 'textfield',
    '#title' => t('Brand'),
    '#default_value' => isset($tracdelight_product->brand) ? $tracdelight_product->brand : NULL,
    '#required' => TRUE,
  );

  $form['description'] = array(
    '#type' => 'textfield',
    '#title' => t('Description'),
    '#default_value' => isset($tracdelight_product->description) ? $tracdelight_product->description : NULL,
    '#required' => TRUE,
  );

  $form['shipping_costs'] = array(
    '#type' => 'textfield',
    '#title' => t('Shipping costs'),
    '#default_value' => isset($tracdelight_product->shipping_costs) ? $tracdelight_product->shipping_costs : NULL,
  );

  $form['delivery_time'] = array(
    '#type' => 'textfield',
    '#title' => t('Delivery time'),
    '#default_value' => isset($tracdelight_product->delivery_time) ? $tracdelight_product->delivery_time : NULL,
  );

  $form['shop'] = array(
    '#type' => 'textfield',
    '#title' => t('Shopname'),
    '#default_value' => isset($tracdelight_product->shop) ? $tracdelight_product->shop : NULL,
  );

  $form['amount'] = array(
    '#type' => 'textfield',
    '#title' => t('Amount'),
    '#default_value' => isset($tracdelight_product->amount) ? $tracdelight_product->amount : NULL,
    '#required' => TRUE,
  );

  $form['currency_code'] = array(
    '#type' => 'textfield',
    '#title' => t('Currency code'),
    '#default_value' => isset($tracdelight_product->currency_code) ? $tracdelight_product->currency_code : NULL,
    '#required' => TRUE,
  );

  $form['image'] = array(
    '#title' => t('Image'),
    '#type' => 'managed_file',
    '#default_value' => isset($tracdelight_product->image) ? $tracdelight_product->image : NULL,
    '#upload_location' => 'public://image_example_images/',
    '#required' => TRUE,
  );

  $form['active'] = array(
    '#type' => 'radios',
    '#title' => t('Active'),
    '#default_value' => isset($tracdelight_product->active) ? $tracdelight_product->active : 1,
    '#options' => array(0 => t('Closed'), 1 => t('Active')),
    '#required' => TRUE,
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save'),
    '#submit' => array('tracdelight_product_add_form_submit'),
    '#weight' => 100,
  );

  field_attach_form('tracdelight_product', $tracdelight_product, $form, $form_state);

  return $form;
}
