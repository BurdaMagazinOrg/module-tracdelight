<?php

/**
 * @file
 * Contains tracdelight.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use \Drupal\tracdelight\Tracdelight;

/**
 * Implements hook_help().
 */
function tracdelight_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the tracdelight module.
    case 'help.page.tracdelight':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('tracdelight') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function tracdelight_theme() {
  return array(
    'product' => array(
      'render element' => 'elements',
    ),

  );
}

function template_preprocess_product(array &$variables) {
  // Fetch Product Entity Object.
  $product = $variables['elements']['#product'];

  // Helpful $content variable for templates.
  foreach (\Drupal\Core\Render\Element::children($variables['elements']) as $key) {
    $variables['content'][$key] = $variables['elements'][$key];
  }

  $variables['content']['uri'] = $product->detailpageurl->uri;
  $variables['content']['active'] = $product->active->value;

}


/**
 * Implementation of hook_cron().
 */
function tracdelight_cron() {

  $queue = \Drupal::queue('tracdelight_product_updates');

  // only put stuff into queue if the queue is empty.
  // API is slower then our cron run and so we would query all the same item all the time.
  if ($queue->numberOfItems() > 0) {
    return;
  }

  $page = 0;

  $query = \Drupal::entityQuery('product');

  while (TRUE) {
    $query->range($page++ * Tracdelight::TRACDELIGHT_MAX_ITEMS, Tracdelight::TRACDELIGHT_MAX_ITEMS);
    $result = $query->execute();
    if (empty($result) || count($result) <= 0) {
      break;
    }

    $products = \Drupal::entityManager()
      ->getStorage('product')
      ->loadMultiple(array_keys($result));

    $eins = array_map(function ($product) {
      return $product->ein->value;
    }, $products);


    $queue->createItem($eins);
  }
}
